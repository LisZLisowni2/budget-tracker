services:
  frontend:
    image: 127.0.0.1:5000/budget-tracker-frontend:latest
    deploy:
      replicas: 1
    networks:
      - overlayNet
    ports:
      - target: 443
        published: 443
        protocol: tcp
        # mode: host

  backend:
    image: 127.0.0.1:5000/budget-tracker-backend:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
    networks:
      - overlayNet
    secrets:
      - redis_password
      - db_password
      - jwt_token

  database:
    image: mongo:latest # Version 4.4 on CPU without AVX support otherwise replace 4.4 with latest or another desired version
    deploy:
      replicas: 1
    secrets:
      - db_password
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/db_password
      - MONGO_INITDB_DATABASE=myapp
    ports:
      - "27017:27017"
    networks:
      - overlayNet
    volumes:
      - databaseTestData:/data/db

  redis:
    image: redis:8.2.1
    deploy:
      replicas: 1
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        # mode: host
    secrets:
      - redis_password
    command: >
      sh -c "docker-entrypoint.sh --requirepass $$(cat /run/secrets/redis_password)"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$(cat /run/secrets/redis_password)", "PING"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - overlayNet

networks:
  overlayNet:
    driver: overlay

volumes:
  databaseTestData:

secrets:
  db_password:
    file: dbPassword.local
  redis_password:
    file: redisPassword.local
  jwt_token:
    file: JWTToken.local
