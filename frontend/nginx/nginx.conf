events {}

http {
    server {
        listen 80;
        server_name localhost;

        return 301 https://$host$request_uri;
    }

    server { 
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        location / {
            root /usr/share/nginx/html;
            index index.html;

            types {
                text/css css;
                application/javascript js;
                application/json json;
                text/html html htm;
            }

            location ~* \.(css|js)$ {
                try_files $uri =404;
                add_header Content-Type $content_type;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Real-ID $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;

            add_header Access-Control-Request-Method *;
            add_header Access-Control-Request-Headers *;
            add_header Access-Control-Allow-Origin *;
        }

        # location /api/ {
        #     proxy_pass http://127.0.0.1:3000;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-ID $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_connect_timeout 60s;
        #     proxy_send_timeout 60s;
        #     proxy_read_timeout 60s;
        #     send_timeout 60s;

        #     add_header Access-Control-Request-Method *;
        #     add_header Access-Control-Request-Headers *;
        #     add_header Access-Control-Allow-Origin *;

        #     if ($request_method = OPTIONS) {
        #         add_header Content-Length 0;
        #         add_header Content-Type text/plain;
        #         return 204;
        #     }
        # }
    }
}